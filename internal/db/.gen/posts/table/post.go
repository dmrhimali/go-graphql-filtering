//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Post = newPostTable("posts", "Post", "")

type postTable struct {
	mysql.Table

	// Columns
	ID            mysql.ColumnInteger
	Title         mysql.ColumnString
	Characters    mysql.ColumnInteger
	Text          mysql.ColumnString
	Score         mysql.ColumnFloat
	Completed     mysql.ColumnBool
	DatePublished mysql.ColumnDate

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type PostTable struct {
	postTable

	NEW postTable
}

// AS creates new PostTable with assigned alias
func (a PostTable) AS(alias string) *PostTable {
	return newPostTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PostTable with assigned schema name
func (a PostTable) FromSchema(schemaName string) *PostTable {
	return newPostTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PostTable with assigned table prefix
func (a PostTable) WithPrefix(prefix string) *PostTable {
	return newPostTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PostTable with assigned table suffix
func (a PostTable) WithSuffix(suffix string) *PostTable {
	return newPostTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPostTable(schemaName, tableName, alias string) *PostTable {
	return &PostTable{
		postTable: newPostTableImpl(schemaName, tableName, alias),
		NEW:       newPostTableImpl("", "new", ""),
	}
}

func newPostTableImpl(schemaName, tableName, alias string) postTable {
	var (
		IDColumn            = mysql.IntegerColumn("ID")
		TitleColumn         = mysql.StringColumn("title")
		CharactersColumn    = mysql.IntegerColumn("characters")
		TextColumn          = mysql.StringColumn("text")
		ScoreColumn         = mysql.FloatColumn("score")
		CompletedColumn     = mysql.BoolColumn("completed")
		DatePublishedColumn = mysql.DateColumn("datePublished")
		allColumns          = mysql.ColumnList{IDColumn, TitleColumn, CharactersColumn, TextColumn, ScoreColumn, CompletedColumn, DatePublishedColumn}
		mutableColumns      = mysql.ColumnList{TitleColumn, CharactersColumn, TextColumn, ScoreColumn, CompletedColumn, DatePublishedColumn}
	)

	return postTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:            IDColumn,
		Title:         TitleColumn,
		Characters:    CharactersColumn,
		Text:          TextColumn,
		Score:         ScoreColumn,
		Completed:     CompletedColumn,
		DatePublished: DatePublishedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
